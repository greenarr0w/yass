plugins {
    id "org.jetbrains.kotlin.jvm" version "1.2.71" apply false
    id "org.jetbrains.dokka" version "0.9.17" apply false
}

subprojects {
    ext {
        websocket_dep = 'javax.websocket:javax.websocket-api:1.0'
        jetty_dep = 'org.eclipse.jetty.websocket:javax-websocket-server-impl:9.4.11.v20180605'
        undertow_dep = 'io.undertow:undertow-websockets-jsr:2.0.9.Final'
    }

    apply plugin: "org.jetbrains.kotlin.jvm"

    sourceSets {
        main { kotlin { srcDir 'main' } }
        test { kotlin { srcDir 'test' } }
    }

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
        testCompile "org.jetbrains.kotlin:kotlin-test-junit"
    }

    compileKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
            javaParameters = true
        }
    }

    compileTestKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
            javaParameters = true
        }
    }

    repositories {
        mavenCentral()
    }

    configurations.all {
        resolutionStrategy {
            failOnVersionConflict()
        }
    }

    task packageSources(type: Jar) {
        from sourceSets.main.allSource
        classifier = 'sources'
    }

    apply plugin: "org.jetbrains.dokka"

    dokka {
        outputFormat = 'html'
        reportUndocumented = false
        outputDirectory = "$buildDir/dokka"
    }

    task packageDokka(type: Jar, dependsOn: 'dokka') {
        from "$buildDir/dokka"
        classifier = 'javadoc'
    }

    artifacts {
        archives(packageSources)
        archives(packageDokka)
    }

    apply plugin: 'maven'
    apply plugin: 'signing'

    group = "ch.softappeal.yass"

    task sign {
        doLast {
            pom {
                project {
                    name project.name
                    description 'Yet Another Service Solution'
                    url 'https://github.com/softappeal/yass'
                    licenses { license { name 'BSD-3-Clause' } }
                    scm { url 'https://github.com/softappeal/yass' }
                    organization { name 'softappeal GmbH Switzerland' }
                    developers { developer { name 'Angelo Salvade' } }
                }
            }.writeTo("build/libs/${project.name}-${version}.pom")
            if (rootProject.hasProperty('signing.password')) {
                file("build/libs").listFiles().each { signing.sign(it) }
            }
            ant.zip(destfile: "build/${project.name}-${version}_artifacts.zip") {
                fileset(dir: 'build/libs')
            }
        }
    }
}

task clean {
    doLast {
        ant.delete(dir: ".", includes: "*/out/", includeemptydirs: true)
    }
}
